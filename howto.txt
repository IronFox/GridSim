generating the main library:

windows:
a) create a new static library project in whatever ide you're using.
b) add all .c and .cpp files from all sub-folders of this folder to your project.
c) make sure the final library is put somewhere where you can find it later on. in gcc the library should be named 'libeve.a' or 'libfoundation.a' or whatever as long as it starts with 'lib' and ends with '.a'. other IDEs may have different conventions.
d) add this folder to the c-includes and c++-includes of your IDE.
e) it is adviced yet not necessary to set the compiler to maximum-optimization.
f) press 'build project' - this may take a while.


unix/linux:
a) call make in the include folder


once you're done you can link this new library to any of your projects making all class-methods, functions and global variables available. putting all files into one library may seem inefficient but it greatly reduces linker-troubles.

recompiling the library:
from time to time it may become necessary to recompile the library. for that you should save the lib-project to some place where you can find it again. new files are rarely added but existing ones may be optimized or debugged. if you notice that any of the .cpp-files changed during the svn-update then you might want to recompile the library.
the most obvious hint is when linker-errors occur. that means new functions were added that are not compiled into your library. recomipiling the library may also become necessary if your application throws access violation errors for no obvious reason (though there may of course be bugs in your program too - if in doubt recompile ;) ).
